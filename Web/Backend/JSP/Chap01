//[짧고 굵게 배우는 JSP 웹 프로그래밍과 스프링 프레임워크] - 황희정/한빛아카데미
//위 책의 내용을 정리함

[CHAPTER 01 - 웹프로그래밍의 이해]


[ 웹(World Wide Web) ]
: 인터넷 상의 정보를 하이퍼텍스트 방식과 멀티미디어 환경에서 검색할 수 있게 해주는 정보 검색 시스템
: HTTP 프로토콜을 사용함
: HTML로 작성된 문서를 연결하여 콘텐츠를 제공함


[ 웹의 동작 ]
: HTML로 만든 콘텐츠는 웹 서버를 통해 서비스로 제공함
: 클라이언트에서 서비스를 이용하려면 웹 브라우저가 필요함

- 웹 동작 구조
1. 웹 브라우저에서 URL 입력
2. DNS 서버에서 IP 주소로 변환하여 웹 브라우저에 제공
3. 웹 브라우저에서 웹 서버의 특정 포트로 접속하여 HTML 페이지 요청
4. 웹 서버는 요청된 HTML 파일을 읽어옴
5. 웹 서버가 웹 브라우저로 HTML 파일 전송
6. 웹 프라우저는 HTML 태그 분석하여 화면 구성


[ 인터넷 ]
인터넷 주소 : 호스트 이름(www) + 도메인 이름(....co.kr)과 같은 형태이다.
DNS(Domain Name System) : 도메인을 IP 주소로 변환하는 서비스

- DNS 동작 구조
1. 네트워크 서비스 제공 회사의 DNS 서버에 찾고자 하는 주소의 도메인 이름을 요청함
2. DNS서버는 해당 도메인 이름 서버에 해당 호스트이름 컴퓨터의 IP 주소를 요청함
3. 해당 도메인 이름 서버는 해당 호스트 이름 컴퓨터의 IP주소를 DNS zone file에서 찾아서 알려줌
4. DNS서버는 클라이언트에서 IP 주소를 알려준다.
(참고 블로그) https://ja-gamma.tistory.com/entry/DNS%EA%B0%9C%EB%85%90%EB%8F%99%EC%9E%91%EC%9B%90%EB%A6%AC


[ 클라이언트-서버 구조 ]
서버 : 웹 서비스 제공
클라이언트 : 웹 서비스 이용
백엔드(Back-end) : 서버에서 동작하는 프로그램 영역
프론트엔드(Front-end) : 클라이언트에서 동작하는 프로그램 영역


[ HTML/CSS/자바스크립트 ]
HTML : 웹 문서의 구조 정의 및 콘텐츠 표현 기본 마크업 언어
CSS : HTML 문서에 시각적 요소를 정의하기 위한 규칙
JavaScript : HTML 문서에서 이벤트를 서버 연결 없이 동적으로 처리할 수 있는 기술


[ 백엔드 중심 개발 ]
: 서버에서 모든 것을 담당함
: 모바일 네트워크 속도가 느리고 이용에 많은 비용이 필요함
: Rest API, 클라우드 인프라의 보편화로 MSA 방식이 확산됨
: 검색 엔진 최적화에 유리
: 서비스 연동에 필요한 다양한 서버 환경에 대응 가능

* API : 프로토콜 집합을 사용하여 두 소프트웨어 구성요소가 서로 통신할 수 있게 하는 구조
* REST API : REST(HTTP를 통해 URI로 자원을 명시하고, HTTP함수를 통해 자원에 데이터 처리 기능을 적용함)기반 API
* MSA : 하나의 큰 어플리케이션을 여러 개의 작은 어플리케이션으로 쪼개어 변경 및 조합이 가능하도록 한 형태
(참고 블로그)
https://aws.amazon.com/ko/what-is/api/
https://khj93.tistory.com/entry/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-REST-API%EB%9E%80-REST-RESTful%EC%9D%B4%EB%9E%80
https://steady-coding.tistory.com/595

- 동작 방식
1. 클라이언트가 서버에 URL로 요청
2. 서블릿과 자바, Node.js 등을 통해 DB와 연동
3. JSP에서 HTML과 데이터를 조합하여 페이지 구성
4. 클라이언트에게 HTML로 전달


[ 프론트엔드 중심 개발 ]
: 클라이언트에서 HTML을 가지고 있거나 서버에서 HTML만 받아오고 화면구성에 필요한 데이터만 자바스크립트로 받아옴
: CSR(Client-side rendering) 방식
: 데이터 제공 서버는 주로 REST API
: 검색엔진 최적화를 위해 SSR(Server-side rendering) 접목
: 실시간 데이터 갱신이 자유로움
: 필요한 부분의 데이터만 갱신 가능하기 때문에 전체 화면을 받아올 필요가 없음
: SPA, PWA 등의 구현에 적용 가능

*SPA : 하나의 페이지에 여러 화면 구성 요소를 넣는 앱 개발 방식
*PWA : 웹으로 구현되었으나 일반 스마트폰 앱처럼 사용할 수 있는 기술

(참고 블로그) https://eunjinii.tistory.com/105 

- 동작 방식
1. 클라이언트가 서버에 URI로 요청
2. 자바 서블릿, Node.js 등을 통해 DB와 연동
3. 클라이언트에게 JSON형태로 전달
4. 클라이언트에서 JSON데이터와 HTML을 조합(렌더링)함

